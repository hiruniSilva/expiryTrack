let express,models;_e56‍.x([["default",()=>_e56‍.o]]);_e56‍.w("express",[["default",["express"],function(v){express=v}]]);_e56‍.w("../models",[["default",["models"],function(v){models=v}]]);


const router = express.Router();

router.get("/getItems", async (req, res) => {
  try {
    const items = await models.Item.findAll();
    res.status(201).json(items);
  } catch (error) {
    res.status(400).send(error.message);
  }
});

router.post("/addItems", async (req, res) => {
  try {
    const { itemName, expiryDate } = req.body;
    const isValid = models.Item.validateItemData({
      itemName,
      expiryDate
    });
    if(!isValid) throw new Error("Invalid Data. Please try again !!!");
    const addItem = await models.Item.create({
      itemName : itemName,
      expiryDate: expiryDate

    })
    _e56‍.g.console.log(addItem);

    res.status(201).json(addItem);
  } catch (error) {
    res.status(400).send(error.message);
  }
});

_e56‍.d(router);
